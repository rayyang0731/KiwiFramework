//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class TbBlock :  Bright.Config.BeanBase 
{
    public TbBlock(JSONNode _json) 
    {
        { if(!_json["ID"].IsNumber) { throw new SerializationException(); }  ID = _json["ID"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { if(!_json["Group"].IsNumber) { throw new SerializationException(); }  Group = _json["Group"]; }
        { if(!_json["IconName"].IsString) { throw new SerializationException(); }  IconName = _json["IconName"]; }
        { if(!_json["EliminateEffect"].IsString) { throw new SerializationException(); }  EliminateEffect = _json["EliminateEffect"]; }
        { if(!_json["CombineEffect"].IsString) { throw new SerializationException(); }  CombineEffect = _json["CombineEffect"]; }
        { if(!_json["PointerEffect"].IsString) { throw new SerializationException(); }  PointerEffect = _json["PointerEffect"]; }
        { if(!_json["CoverEffect"].IsString) { throw new SerializationException(); }  CoverEffect = _json["CoverEffect"]; }
        { if(!_json["DeadSound"].IsString) { throw new SerializationException(); }  DeadSound = _json["DeadSound"]; }
        { if(!_json["TriggeSound"].IsString) { throw new SerializationException(); }  TriggeSound = _json["TriggeSound"]; }
        { if(!_json["MoveSound"].IsString) { throw new SerializationException(); }  MoveSound = _json["MoveSound"]; }
        { if(!_json["ChangeSound"].IsString) { throw new SerializationException(); }  ChangeSound = _json["ChangeSound"]; }
        { if(!_json["MatchID"].IsString) { throw new SerializationException(); }  MatchID = _json["MatchID"]; }
        { if(!_json["PrevLevelID"].IsNumber) { throw new SerializationException(); }  PrevLevelID = _json["PrevLevelID"]; }
        { if(!_json["NextLevelID"].IsNumber) { throw new SerializationException(); }  NextLevelID = _json["NextLevelID"]; }
        { if(!_json["Life"].IsNumber) { throw new SerializationException(); }  Life = _json["Life"]; }
        { if(!_json["CanDrop"].IsBoolean) { throw new SerializationException(); }  CanDrop = _json["CanDrop"]; }
        { if(!_json["CanMove"].IsBoolean) { throw new SerializationException(); }  CanMove = _json["CanMove"]; }
        { if(!_json["CanAction"].IsBoolean) { throw new SerializationException(); }  CanAction = _json["CanAction"]; }
        { if(!_json["PlayCombine"].IsBoolean) { throw new SerializationException(); }  PlayCombine = _json["PlayCombine"]; }
        { if(!_json["ClickFunction"].IsString) { throw new SerializationException(); }  ClickFunction = _json["ClickFunction"]; }
        { if(!_json["MatchFunction"].IsString) { throw new SerializationException(); }  MatchFunction = _json["MatchFunction"]; }
        { if(!_json["NearMatchFunction"].IsString) { throw new SerializationException(); }  NearMatchFunction = _json["NearMatchFunction"]; }
        { if(!_json["RoundEndFunction"].IsString) { throw new SerializationException(); }  RoundEndFunction = _json["RoundEndFunction"]; }
        { if(!_json["ChangeFunction"].IsString) { throw new SerializationException(); }  ChangeFunction = _json["ChangeFunction"]; }
        PostInit();
    }

    public TbBlock(int ID, string Name, int Group, string IconName, string EliminateEffect, string CombineEffect, string PointerEffect, string CoverEffect, string DeadSound, string TriggeSound, string MoveSound, string ChangeSound, string MatchID, int PrevLevelID, int NextLevelID, int Life, bool CanDrop, bool CanMove, bool CanAction, bool PlayCombine, string ClickFunction, string MatchFunction, string NearMatchFunction, string RoundEndFunction, string ChangeFunction ) 
    {
        this.ID = ID;
        this.Name = Name;
        this.Group = Group;
        this.IconName = IconName;
        this.EliminateEffect = EliminateEffect;
        this.CombineEffect = CombineEffect;
        this.PointerEffect = PointerEffect;
        this.CoverEffect = CoverEffect;
        this.DeadSound = DeadSound;
        this.TriggeSound = TriggeSound;
        this.MoveSound = MoveSound;
        this.ChangeSound = ChangeSound;
        this.MatchID = MatchID;
        this.PrevLevelID = PrevLevelID;
        this.NextLevelID = NextLevelID;
        this.Life = Life;
        this.CanDrop = CanDrop;
        this.CanMove = CanMove;
        this.CanAction = CanAction;
        this.PlayCombine = PlayCombine;
        this.ClickFunction = ClickFunction;
        this.MatchFunction = MatchFunction;
        this.NearMatchFunction = NearMatchFunction;
        this.RoundEndFunction = RoundEndFunction;
        this.ChangeFunction = ChangeFunction;
        PostInit();
    }

    public static TbBlock DeserializeTbBlock(JSONNode _json)
    {
        return new TbBlock(_json);
    }

    /// <summary>
    /// 角色ID
    /// </summary>
    public int ID { get; private set; }
    /// <summary>
    /// 名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 方块组
    /// </summary>
    public int Group { get; private set; }
    /// <summary>
    /// 图标名称
    /// </summary>
    public string IconName { get; private set; }
    /// <summary>
    /// 消除特效
    /// </summary>
    public string EliminateEffect { get; private set; }
    /// <summary>
    /// 合并特效
    /// </summary>
    public string CombineEffect { get; private set; }
    /// <summary>
    /// 指示器特效
    /// </summary>
    public string PointerEffect { get; private set; }
    /// <summary>
    /// 覆盖特效(覆盖其它对象的消除特效)
    /// </summary>
    public string CoverEffect { get; private set; }
    /// <summary>
    /// 死亡音效
    /// </summary>
    public string DeadSound { get; private set; }
    /// <summary>
    /// 触发音效
    /// </summary>
    public string TriggeSound { get; private set; }
    /// <summary>
    /// 移动音效
    /// </summary>
    public string MoveSound { get; private set; }
    /// <summary>
    /// 变化音效
    /// </summary>
    public string ChangeSound { get; private set; }
    /// <summary>
    /// 匹配对象ID
    /// </summary>
    public string MatchID { get; private set; }
    /// <summary>
    /// 上一级ID
    /// </summary>
    public int PrevLevelID { get; private set; }
    /// <summary>
    /// 下一级ID
    /// </summary>
    public int NextLevelID { get; private set; }
    /// <summary>
    /// 寿命（小于等于0即被消除）
    /// </summary>
    public int Life { get; private set; }
    /// <summary>
    /// 是否可以下落
    /// </summary>
    public bool CanDrop { get; private set; }
    /// <summary>
    /// 是否可以移动（点击滑动）
    /// </summary>
    public bool CanMove { get; private set; }
    /// <summary>
    /// 是否可以被点击
    /// </summary>
    public bool CanAction { get; private set; }
    /// <summary>
    /// 匹配时,是否播合并过程
    /// </summary>
    public bool PlayCombine { get; private set; }
    /// <summary>
    /// 被点击功能
    /// </summary>
    public string ClickFunction { get; private set; }
    /// <summary>
    /// 匹配效果
    /// </summary>
    public string MatchFunction { get; private set; }
    /// <summary>
    /// 相邻凝结效果
    /// </summary>
    public string NearMatchFunction { get; private set; }
    /// <summary>
    /// 回合结束功能
    /// </summary>
    public string RoundEndFunction { get; private set; }
    /// <summary>
    /// 改变效果
    /// </summary>
    public string ChangeFunction { get; private set; }

    public const int __ID__ = 110834335;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Group:" + Group + ","
        + "IconName:" + IconName + ","
        + "EliminateEffect:" + EliminateEffect + ","
        + "CombineEffect:" + CombineEffect + ","
        + "PointerEffect:" + PointerEffect + ","
        + "CoverEffect:" + CoverEffect + ","
        + "DeadSound:" + DeadSound + ","
        + "TriggeSound:" + TriggeSound + ","
        + "MoveSound:" + MoveSound + ","
        + "ChangeSound:" + ChangeSound + ","
        + "MatchID:" + MatchID + ","
        + "PrevLevelID:" + PrevLevelID + ","
        + "NextLevelID:" + NextLevelID + ","
        + "Life:" + Life + ","
        + "CanDrop:" + CanDrop + ","
        + "CanMove:" + CanMove + ","
        + "CanAction:" + CanAction + ","
        + "PlayCombine:" + PlayCombine + ","
        + "ClickFunction:" + ClickFunction + ","
        + "MatchFunction:" + MatchFunction + ","
        + "NearMatchFunction:" + NearMatchFunction + ","
        + "RoundEndFunction:" + RoundEndFunction + ","
        + "ChangeFunction:" + ChangeFunction + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
