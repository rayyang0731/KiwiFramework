//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class TbGuide :  Bright.Config.BeanBase 
{
    public TbGuide(JSONNode _json) 
    {
        { if(!_json["ID"].IsNumber) { throw new SerializationException(); }  ID = _json["ID"]; }
        { if(!_json["UIName"].IsString) { throw new SerializationException(); }  UIName = _json["UIName"]; }
        { if(!_json["Next"].IsNumber) { throw new SerializationException(); }  Next = _json["Next"]; }
        { if(!_json["ActiveTime"].IsNumber) { throw new SerializationException(); }  ActiveTime = _json["ActiveTime"]; }
        { if(!_json["Sound"].IsString) { throw new SerializationException(); }  Sound = _json["Sound"]; }
        { if(!_json["Image"].IsString) { throw new SerializationException(); }  Image = _json["Image"]; }
        { var _json2 = _json["ImagePosition"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } ImagePosition = new UnityEngine.Vector2(__x, __y); }
        { if(!_json["Text"].IsString) { throw new SerializationException(); }  Text = _json["Text"]; }
        { var _json2 = _json["TextPosition"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } TextPosition = new UnityEngine.Vector2(__x, __y); }
        { var _json2 = _json["TextArea"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } TextArea = new UnityEngine.Vector2(__x, __y); }
        { if(!_json["TextBackground"].IsString) { throw new SerializationException(); }  TextBackground = _json["TextBackground"]; }
        { var _json2 = _json["TextBGPosition"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } TextBGPosition = new UnityEngine.Vector2(__x, __y); }
        { var _json2 = _json["TextBGArea"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } TextBGArea = new UnityEngine.Vector2(__x, __y); }
        { if(!_json["TipsText"].IsString) { throw new SerializationException(); }  TipsText = _json["TipsText"]; }
        { var _json2 = _json["TipsPosition"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } TipsPosition = new UnityEngine.Vector2(__x, __y); }
        { if(!_json["HighlightClickSeep"].IsBoolean) { throw new SerializationException(); }  HighlightClickSeep = _json["HighlightClickSeep"]; }
        { var _json2 = _json["HighlightPosition"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } HighlightPosition = new UnityEngine.Vector2(__x, __y); }
        { var _json2 = _json["HighlightArea"]; if(!_json2.IsObject) { throw new SerializationException(); }  float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } HighlightArea = new UnityEngine.Vector2(__x, __y); }
        { if(!_json["HighlightEffect"].IsString) { throw new SerializationException(); }  HighlightEffect = _json["HighlightEffect"]; }
        { if(!_json["HighlightEffectDuration"].IsNumber) { throw new SerializationException(); }  HighlightEffectDuration = _json["HighlightEffectDuration"]; }
        { if(!_json["Effect"].IsString) { throw new SerializationException(); }  Effect = _json["Effect"]; }
        { var _json2 = _json["EffectPosition"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  EffectPosition = new UnityEngine.Vector3(__x, __y,__z); }
        PostInit();
    }

    public TbGuide(int ID, string UIName, int Next, float ActiveTime, string Sound, string Image, UnityEngine.Vector2 ImagePosition, string Text, UnityEngine.Vector2 TextPosition, UnityEngine.Vector2 TextArea, string TextBackground, UnityEngine.Vector2 TextBGPosition, UnityEngine.Vector2 TextBGArea, string TipsText, UnityEngine.Vector2 TipsPosition, bool HighlightClickSeep, UnityEngine.Vector2 HighlightPosition, UnityEngine.Vector2 HighlightArea, string HighlightEffect, float HighlightEffectDuration, string Effect, UnityEngine.Vector3 EffectPosition ) 
    {
        this.ID = ID;
        this.UIName = UIName;
        this.Next = Next;
        this.ActiveTime = ActiveTime;
        this.Sound = Sound;
        this.Image = Image;
        this.ImagePosition = ImagePosition;
        this.Text = Text;
        this.TextPosition = TextPosition;
        this.TextArea = TextArea;
        this.TextBackground = TextBackground;
        this.TextBGPosition = TextBGPosition;
        this.TextBGArea = TextBGArea;
        this.TipsText = TipsText;
        this.TipsPosition = TipsPosition;
        this.HighlightClickSeep = HighlightClickSeep;
        this.HighlightPosition = HighlightPosition;
        this.HighlightArea = HighlightArea;
        this.HighlightEffect = HighlightEffect;
        this.HighlightEffectDuration = HighlightEffectDuration;
        this.Effect = Effect;
        this.EffectPosition = EffectPosition;
        PostInit();
    }

    public static TbGuide DeserializeTbGuide(JSONNode _json)
    {
        return new TbGuide(_json);
    }

    /// <summary>
    /// ID
    /// </summary>
    public int ID { get; private set; }
    /// <summary>
    /// 触发关卡
    /// </summary>
    public string UIName { get; private set; }
    /// <summary>
    /// 下一引导
    /// </summary>
    public int Next { get; private set; }
    /// <summary>
    /// 可以点击的时间
    /// </summary>
    public float ActiveTime { get; private set; }
    /// <summary>
    /// 出现音效
    /// </summary>
    public string Sound { get; private set; }
    /// <summary>
    /// 图片
    /// </summary>
    public string Image { get; private set; }
    /// <summary>
    /// 图片位置
    /// </summary>
    public UnityEngine.Vector2 ImagePosition { get; private set; }
    /// <summary>
    /// 文字信息
    /// </summary>
    public string Text { get; private set; }
    /// <summary>
    /// 文字位置
    /// </summary>
    public UnityEngine.Vector2 TextPosition { get; private set; }
    /// <summary>
    /// 文字区域大小
    /// </summary>
    public UnityEngine.Vector2 TextArea { get; private set; }
    /// <summary>
    /// 文字信息背景
    /// </summary>
    public string TextBackground { get; private set; }
    /// <summary>
    /// 文字背景位置
    /// </summary>
    public UnityEngine.Vector2 TextBGPosition { get; private set; }
    /// <summary>
    /// 文字背景区域大小
    /// </summary>
    public UnityEngine.Vector2 TextBGArea { get; private set; }
    /// <summary>
    /// tips文字
    /// </summary>
    public string TipsText { get; private set; }
    /// <summary>
    /// Tips位置
    /// </summary>
    public UnityEngine.Vector2 TipsPosition { get; private set; }
    /// <summary>
    /// 高亮点击渗透
    /// </summary>
    public bool HighlightClickSeep { get; private set; }
    /// <summary>
    /// 高亮位置
    /// </summary>
    public UnityEngine.Vector2 HighlightPosition { get; private set; }
    /// <summary>
    /// 高亮区域
    /// </summary>
    public UnityEngine.Vector2 HighlightArea { get; private set; }
    /// <summary>
    /// 高亮特效
    /// </summary>
    public string HighlightEffect { get; private set; }
    /// <summary>
    /// 高亮特效转一圈的时间
    /// </summary>
    public float HighlightEffectDuration { get; private set; }
    /// <summary>
    /// 点特效
    /// </summary>
    public string Effect { get; private set; }
    /// <summary>
    /// 点特效位置
    /// </summary>
    public UnityEngine.Vector3 EffectPosition { get; private set; }

    public const int __ID__ = 115714318;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "UIName:" + UIName + ","
        + "Next:" + Next + ","
        + "ActiveTime:" + ActiveTime + ","
        + "Sound:" + Sound + ","
        + "Image:" + Image + ","
        + "ImagePosition:" + ImagePosition + ","
        + "Text:" + Text + ","
        + "TextPosition:" + TextPosition + ","
        + "TextArea:" + TextArea + ","
        + "TextBackground:" + TextBackground + ","
        + "TextBGPosition:" + TextBGPosition + ","
        + "TextBGArea:" + TextBGArea + ","
        + "TipsText:" + TipsText + ","
        + "TipsPosition:" + TipsPosition + ","
        + "HighlightClickSeep:" + HighlightClickSeep + ","
        + "HighlightPosition:" + HighlightPosition + ","
        + "HighlightArea:" + HighlightArea + ","
        + "HighlightEffect:" + HighlightEffect + ","
        + "HighlightEffectDuration:" + HighlightEffectDuration + ","
        + "Effect:" + Effect + ","
        + "EffectPosition:" + EffectPosition + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
