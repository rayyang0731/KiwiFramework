//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class TbPokedex :  Bright.Config.BeanBase 
{
    public TbPokedex(JSONNode _json) 
    {
        { if(!_json["ID"].IsNumber) { throw new SerializationException(); }  ID = _json["ID"]; }
        { if(!_json["Name"].IsString) { throw new SerializationException(); }  Name = _json["Name"]; }
        { if(!_json["Level"].IsNumber) { throw new SerializationException(); }  Level = _json["Level"]; }
        { if(!_json["Type"].IsNumber) { throw new SerializationException(); }  Type = _json["Type"]; }
        { if(!_json["TypeName"].IsString) { throw new SerializationException(); }  TypeName = _json["TypeName"]; }
        { if(!_json["Icon"].IsString) { throw new SerializationException(); }  Icon = _json["Icon"]; }
        { if(!_json["Desc"].IsString) { throw new SerializationException(); }  Desc = _json["Desc"]; }
        { var _json2 = _json["Scale"]; if(!_json2.IsObject) { throw new SerializationException(); } float __x; { if(!_json2["x"].IsNumber) { throw new SerializationException(); }  __x = _json2["x"]; } float __y; { if(!_json2["y"].IsNumber) { throw new SerializationException(); }  __y = _json2["y"]; } float __z; { if(!_json2["z"].IsNumber) { throw new SerializationException(); }  __z = _json2["z"]; }  Scale = new UnityEngine.Vector3(__x, __y,__z); }
        { if(!_json["ModelFullName"].IsString) { throw new SerializationException(); }  ModelFullName = _json["ModelFullName"]; }
        { if(!_json["Talent"].IsString) { throw new SerializationException(); }  Talent = _json["Talent"]; }
        { if(!_json["SkillID"].IsString) { throw new SerializationException(); }  SkillID = _json["SkillID"]; }
        PostInit();
    }

    public TbPokedex(int ID, string Name, int Level, int Type, string TypeName, string Icon, string Desc, UnityEngine.Vector3 Scale, string ModelFullName, string Talent, string SkillID ) 
    {
        this.ID = ID;
        this.Name = Name;
        this.Level = Level;
        this.Type = Type;
        this.TypeName = TypeName;
        this.Icon = Icon;
        this.Desc = Desc;
        this.Scale = Scale;
        this.ModelFullName = ModelFullName;
        this.Talent = Talent;
        this.SkillID = SkillID;
        PostInit();
    }

    public static TbPokedex DeserializeTbPokedex(JSONNode _json)
    {
        return new TbPokedex(_json);
    }

    /// <summary>
    /// 角色ID
    /// </summary>
    public int ID { get; private set; }
    /// <summary>
    /// 角色名称
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 解锁关卡
    /// </summary>
    public int Level { get; private set; }
    /// <summary>
    /// 类型id
    /// </summary>
    public int Type { get; private set; }
    /// <summary>
    /// 类型名称
    /// </summary>
    public string TypeName { get; private set; }
    /// <summary>
    /// 头像icon
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// 角色描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 模型比例
    /// </summary>
    public UnityEngine.Vector3 Scale { get; private set; }
    /// <summary>
    /// 模型路径
    /// </summary>
    public string ModelFullName { get; private set; }
    /// <summary>
    /// 天赋备注
    /// </summary>
    public string Talent { get; private set; }
    /// <summary>
    /// 技能备注
    /// </summary>
    public string SkillID { get; private set; }

    public const int __ID__ = -1239987344;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "ID:" + ID + ","
        + "Name:" + Name + ","
        + "Level:" + Level + ","
        + "Type:" + Type + ","
        + "TypeName:" + TypeName + ","
        + "Icon:" + Icon + ","
        + "Desc:" + Desc + ","
        + "Scale:" + Scale + ","
        + "ModelFullName:" + ModelFullName + ","
        + "Talent:" + Talent + ","
        + "SkillID:" + SkillID + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
