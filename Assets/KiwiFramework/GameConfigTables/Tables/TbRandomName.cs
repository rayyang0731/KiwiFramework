//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg
{ 

public sealed partial class TbRandomName :  Bright.Config.BeanBase 
{
    public TbRandomName(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["firstName"].IsString) { throw new SerializationException(); }  FirstName = _json["firstName"]; }
        { if(!_json["secondName"].IsString) { throw new SerializationException(); }  SecondName = _json["secondName"]; }
        PostInit();
    }

    public TbRandomName(int id, string firstName, string secondName ) 
    {
        this.Id = id;
        this.FirstName = firstName;
        this.SecondName = secondName;
        PostInit();
    }

    public static TbRandomName DeserializeTbRandomName(JSONNode _json)
    {
        return new TbRandomName(_json);
    }

    /// <summary>
    /// id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 首名
    /// </summary>
    public string FirstName { get; private set; }
    /// <summary>
    /// 次名
    /// </summary>
    public string SecondName { get; private set; }

    public const int __ID__ = 59393820;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "FirstName:" + FirstName + ","
        + "SecondName:" + SecondName + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
